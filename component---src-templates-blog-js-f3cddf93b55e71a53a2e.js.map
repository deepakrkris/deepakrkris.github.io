{"version":3,"file":"component---src-templates-blog-js-f3cddf93b55e71a53a2e.js","mappings":"uMAMA,MAJcA,EAAAA,QAAAA,IAAAA,WAAU,wDAAVA,CAAU,iB,8BCOxB,MAAMC,GAAiBD,EAAAA,EAAAA,UAAO,QAAC,OAAEE,EAAM,SAAEC,KAAaC,GAAO,SAC3D,gBAAC,IAASA,EAAQD,EAAgB,IAClC,gFAFqBH,CAErB,gRAGmBI,GAAWA,EAAMF,OAAS,OAAS,SAC3CE,GAAWA,EAAMF,OAAS,UAAY,YACvCE,GAAWA,EAAMF,OAASG,EAAAA,EAAAA,UAAmBA,EAAAA,EAAAA,SAOjCA,EAAAA,EAAAA,QAAe,KAQjCC,GAAiBN,EAAAA,EAAAA,SAAOC,GAAe,gFAAtBD,CAAsB,iBAIvCO,GAAiBP,EAAAA,EAAAA,SAAOC,GAAe,gFAAtBD,CAAsB,kBAIvCQ,EAAiBR,EAAAA,QAAAA,KAAAA,WAAW,qEAAXA,CAAW,2EAO5BS,EAAiBT,EAAAA,QAAAA,KAAAA,WAAW,qEAAXA,CAAW,2EAO5BU,EAAkBV,EAAAA,QAAAA,IAAAA,WAAU,sEAAVA,CAAU,+JAKvBK,EAAAA,EAAAA,WAOLM,EAAgBX,EAAAA,QAAAA,IAAAA,WAAU,oEAAVA,CAAU,kDAyChC,MApCoBI,GAClB,gBAACO,EAAa,KACZ,gBAACL,EAAc,CAACM,GAAOR,EAAMS,WAAU,KAAIT,EAAMU,KAAO,GAAKZ,OAAuB,IAAfE,EAAMU,MACzE,gBAACN,EAAc,KACb,gBAAC,IAAe,CAACO,KAAK,eAAe,gBAGvC,gBAACN,EAAc,KACb,gBAAC,IAAe,CAACM,KAAK,eAAe,WAIzC,gBAACR,EAAc,CACbK,GAAOR,EAAMS,WAAU,KAAIT,EAAMU,KAAO,GACxCZ,OAAQE,EAAMU,OAASV,EAAMY,YAE7B,gBAACR,EAAc,KAAC,eAEd,gBAAC,IAAe,CAACO,KAAK,iBAExB,gBAACN,EAAc,KAAC,SAEd,gBAAC,IAAe,CAACM,KAAK,kBAG1B,gBAACL,EAAe,KAAKN,EAAMU,KAAI,IAAIV,EAAMY,YACzC,gBAAC,EAAK,OCvFV,MAAMC,EAAWjB,EAAAA,QAAAA,IAAAA,WAAU,yDAAVA,CAAU,yBAEzB,IAEIkB,EAAQ,6FAuCX,OAvCW,EACZC,kBAAA,WACEC,KAAKC,KAAKC,MAAMC,QAAU,EAC1BC,OAAOC,uBAAsB,KAC3BL,KAAKC,KAAKC,MAAMI,WAAa,0BAC7BN,KAAKC,KAAKC,MAAMC,QAAU,CAAC,GAE/B,EAAC,EAEDI,OAAA,WACE,MAAM,YACJC,EACAC,MACEC,UAAYC,MAAOC,KAEnBZ,KAAKhB,MAET,OACE,gBAACa,EAAQ,CACPgB,IAAMZ,IACJD,KAAKC,KAAOA,CAAI,GAGlB,gBAACa,EAAA,EAAM,KACL,6BAAO,qBAET,gBAAC,EAAU,CACTpB,KAAMc,EAAYd,KAClBE,WAAYY,EAAYZ,WACxBH,WAAYe,EAAYf,aAE1B,gBAAC,EAAK,MACN,gBAAC,EAAU,CACTC,KAAMc,EAAYd,KAClBD,WAAYe,EAAYf,WACxBG,WAAYY,EAAYZ,aAIhC,EAAC,EAvCW,CAASmB,EAAAA,WAwDvB,O","sources":["webpack://deepak-site/./src/components/clear.js","webpack://deepak-site/./src/components/pagination.js","webpack://deepak-site/./src/templates/blog.js"],"sourcesContent":["import styled from \"styled-components\";\n\nconst Clear = styled.div`\n  clear: both;\n`;\n\nexport default Clear;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Link from \"./link\";\nimport Clear from \"./clear\";\nimport colors from \"../utils/colors\";\n\nconst PaginationLink = styled(({ active, children, ...props }) => (\n  <Link {...props}>{children}</Link>\n))`\n  display: inline-block;\n  font-size: 20px;\n  pointer-events: ${(props) => (props.active ? \"auto\" : \"none\")};\n  cursor: ${(props) => (props.active ? \"pointer\" : \"default\")};\n  color: ${(props) => (props.active ? colors.accent1() : colors.base4())};\n  text-decoration: none;\n  font-family: \"Josefin Sans\", sans-serif;\n  text-transform: uppercase;\n  transition: all 0.5s;\n\n  &:hover {\n    background-color: ${colors.accent1(0.1)};\n  }\n\n  @media only screen and (max-width: 32em) {\n    font-size: 16px;\n  }\n`;\n\nconst NewerPostsLink = styled(PaginationLink)`\n  float: left;\n`;\n\nconst OlderPostsLink = styled(PaginationLink)`\n  float: right;\n`;\n\nconst LargeLinkLabel = styled.span`\n  display: inline;\n  @media only screen and (max-width: 32em) {\n    display: none;\n  }\n`;\n\nconst SmallLinkLabel = styled.span`\n  display: none;\n  @media only screen and (max-width: 32em) {\n    display: inline;\n  }\n`;\n\nconst PaginationLabel = styled.div`\n  display: inline-block;\n  margin: 0 auto;\n  font-size: 27px;\n  font-family: \"Josefin Sans\", sans-serif;\n  color: ${colors.accent1()};\n\n  @media only screen and (max-width: 32em) {\n    font-size: 22px;\n  }\n`;\n\nconst PaginationDiv = styled.div`\n  padding: 0 20px;\n  text-align: center !important;\n`;\n\nconst Pagination = (props) => (\n  <PaginationDiv>\n    <NewerPostsLink to={`${props.pathPrefix}/${props.page - 1}`} active={props.page !== 1}>\n      <LargeLinkLabel>\n        <FontAwesomeIcon icon=\"angle-left\" />\n        &nbsp;Newer Posts\n      </LargeLinkLabel>\n      <SmallLinkLabel>\n        <FontAwesomeIcon icon=\"angle-left\" />\n        &nbsp;Newer\n      </SmallLinkLabel>\n    </NewerPostsLink>\n    <OlderPostsLink\n      to={`${props.pathPrefix}/${props.page + 1}`}\n      active={props.page !== props.numOfPages}\n    >\n      <LargeLinkLabel>\n        Older Posts&nbsp;\n        <FontAwesomeIcon icon=\"angle-right\" />\n      </LargeLinkLabel>\n      <SmallLinkLabel>\n        Older&nbsp;\n        <FontAwesomeIcon icon=\"angle-right\" />\n      </SmallLinkLabel>\n    </OlderPostsLink>\n    <PaginationLabel>{`${props.page}/${props.numOfPages}`}</PaginationLabel>\n    <Clear />\n  </PaginationDiv>\n);\n\nPagination.propTypes = {\n  pathPrefix: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n  numOfPages: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql } from \"gatsby\";\n\nimport Clear from \"../components/clear\";\nimport Pagination from \"../components/pagination\";\n\nconst BlogBody = styled.div`\n  margin-bottom: 60px;\n`;\n\nclass BlogPage extends React.Component {\n  componentDidMount() {\n    this.node.style.opacity = 0;\n    window.requestAnimationFrame(() => {\n      this.node.style.transition = \"opacity 1000ms ease-out\";\n      this.node.style.opacity = 1;\n    });\n  }\n\n  render() {\n    const {\n      pageContext,\n      data: {\n        allPosts: { edges: posts },\n      },\n    } = this.props;\n\n    return (\n      <BlogBody\n        ref={(node) => {\n          this.node = node;\n        }}\n      >\n        <Helmet>\n          <title>Deepak Rajamohan</title>\n        </Helmet>\n        <Pagination\n          page={pageContext.page}\n          numOfPages={pageContext.numOfPages}\n          pathPrefix={pageContext.pathPrefix}\n        />\n        <Clear />\n        <Pagination\n          page={pageContext.page}\n          pathPrefix={pageContext.pathPrefix}\n          numOfPages={pageContext.numOfPages}\n        />\n      </BlogBody>\n    );\n  }\n}\n\nBlogPage.propTypes = {\n  pageContext: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    numOfPages: PropTypes.number.isRequired,\n    skip: PropTypes.number.isRequired,\n    limit: PropTypes.number.isRequired,\n    pathPrefix: PropTypes.string.isRequired,\n  }).isRequired,\n  data: PropTypes.shape({\n    pagePosts: PropTypes.object.isRequired,\n    allPosts: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport default BlogPage;\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!, $tags: [String]!) {\n    pagePosts: allMarkdownRemark(\n      sort: { fields: [frontmatter___date_created], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: { frontmatter: { tags: { in: $tags } } }\n    ) {\n      edges {\n        node {\n          ...postFields\n        }\n      }\n    }\n    allPosts: allMarkdownRemark(sort: { fields: [frontmatter___date_created], order: DESC }) {\n      edges {\n        node {\n          frontmatter {\n            tags\n            path\n            title\n            date_created\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["styled","PaginationLink","active","children","props","colors","NewerPostsLink","OlderPostsLink","LargeLinkLabel","SmallLinkLabel","PaginationLabel","PaginationDiv","to","pathPrefix","page","icon","numOfPages","BlogBody","BlogPage","componentDidMount","this","node","style","opacity","window","requestAnimationFrame","transition","render","pageContext","data","allPosts","edges","posts","ref","Helmet","React"],"sourceRoot":""}