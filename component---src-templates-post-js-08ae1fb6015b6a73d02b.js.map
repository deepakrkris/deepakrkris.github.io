{"version":3,"file":"component---src-templates-post-js-08ae1fb6015b6a73d02b.js","mappings":"4KAUA,MAAMA,EAAWC,EAAAA,QAAAA,IAAAA,WAAU,0DAAVA,CAAU,shBAYZC,EAAAA,EAAAA,QAKAA,EAAAA,EAAAA,QAKAA,EAAAA,EAAAA,QAMAA,EAAAA,EAAAA,UAGaA,EAAAA,EAAAA,QAAe,IAW5BA,EAAAA,EAAAA,SAUTC,EAAYF,EAAAA,QAAAA,GAAAA,WAAS,2DAATA,CAAS,0DAEhBC,EAAAA,EAAAA,SAILE,EAAeH,EAAAA,QAAAA,GAAAA,WAAS,8DAATA,CAAS,iHAGnBC,EAAAA,EAAAA,SAMLG,EAAkBJ,EAAAA,QAAAA,KAAAA,WAAW,iEAAXA,CAAW,kLAGRC,EAAAA,EAAAA,WAWrBI,EAAgBC,IACpB,MAAMC,EAAW,GACXC,EAAiB,IAAIC,IAiB3B,OAVAH,EAAMC,SAASG,SAASC,IACtB,IAAIC,EANkBD,IAAYA,EACjCE,QAAQ,kBAAmB,IAC3BA,QAAQ,KAAM,KACdC,cAGiBC,CAAeJ,EAAQK,OACrCR,EAAeS,IAAIL,IACrBJ,EAAeU,IAAIN,EAAaJ,EAAeW,IAAIP,GAAe,GAClEA,EAAiBA,EAAW,IAAIJ,EAAeW,IAAIP,IAEnDJ,EAAeU,IAAIN,EAAa,EAClC,IAGK,gBAACR,EAAe,KAAEG,EAA2B,EACpD,IAYIa,EAAY,6FA0Cf,OA1Ce,EAChBC,kBAAA,WACEC,KAAKC,KAAKC,MAAMC,QAAU,EAC1BC,OAAOC,uBAAsB,KAC3BL,KAAKC,KAAKC,MAAMI,WAAa,0BAC7BN,KAAKC,KAAKC,MAAMC,QAAU,CAAC,GAE/B,EAAC,EAEDI,OAAA,WACE,MACEC,MAAM,SAAEC,IACNT,KAAKhB,MACH0B,EAAO,GAQPC,EAAgB,IAAIC,KAAKH,EAASI,YAAYC,cAAcC,mBAChE,QAPkB,CAClBC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,YAOP,OACE,gBAAC1C,EAAQ,CACP2C,IAAMnB,IACJD,KAAKC,KAAOA,CAAI,GAGlB,gBAAC,IAAM,KACL,6BAAWQ,EAASI,YAAYQ,MAAK,oBAEvC,gBAACzC,EAAS,KAAE6B,EAASI,YAAYQ,OACjC,gBAACxC,EAAY,KAAE8B,GACdD,EACD,uBAAKY,GAAG,eAAeC,wBAAyB,CAAEC,OAAQf,EAASgB,QACnE,gBAAC1C,EAAY,CAACE,SAAUwB,EAASxB,SAAUyC,KAAMjB,EAASI,YAAYa,OAG5E,EAAC,EA1Ce,CAASC,EAAAA,WA0E3B,W","sources":["webpack://deepak-site/./src/templates/post.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport \"prismjs/themes/prism-solarizedlight.css\";\nimport \"katex/dist/katex.min.css\";\n\nimport colors from \"../utils/colors\";\n\nconst PostBody = styled.div`\n  div#post-content {\n    font-family: \"Open Sans\", sans-serif;\n    pre,\n    code {\n      font-family: \"Inconsolata\", monospace;\n      line-height: 20px;\n    }\n\n    p,\n    li {\n      line-height: 25px;\n      color: ${colors.base2()};\n    }\n\n    center {\n      margin-top: -15px;\n      color: ${colors.base2()};\n    }\n\n    h2,\n    h3 {\n      color: ${colors.base1()};\n      text-transform: uppercase;\n      margin: 32px 0 8px 0;\n    }\n\n    a :not(.anchor) {\n      color: ${colors.accent1()};\n      transition: all 0.5s;\n      &:hover {\n        background-color: ${colors.accent1(0.1)};\n      }\n    }\n\n    .gatsby-resp-image-figure {\n      margin: 0;\n    }\n\n    .gatsby-resp-image-figcaption {\n      text-align: center;\n      font-family: \"Open Sans\", sans-serif;\n      color: ${colors.base2()};\n      font-style: italic;\n    }\n  }\n\n  margin: 0 auto 60px auto;\n  position: relative;\n  max-width: 675px;\n`;\n\nconst PostTitle = styled.h1`\n  margin-bottom: 5px;\n  color: ${colors.base1()};\n  text-transform: uppercase;\n`;\n\nconst PostSubtitle = styled.h4`\n  margin-top: 0px;\n  margin-bottom: 5px;\n  color: ${colors.base3()};\n  text-decoration: none;\n  font-weight: normal;\n  text-transform: uppercase;\n`;\n\nconst SideContentsDiv = styled.span`\n  padding: 25px 0 10px 10px;\n  margin: 35px 0 0 10px;\n  border-left: 3px solid ${colors.accent1()};\n  position: absolute;\n  left: 100%;\n  top: 0%;\n  width: 150px;\n\n  @media only screen and (max-width: 64em) {\n    display: none;\n  }\n`;\n\nconst SideContents = (props) => {\n  const headings = [];\n  const headingLinkMap = new Map();\n  // prettier-ignore\n  const getHeadingLink = (heading) => heading\n    .replace(/[^0-9a-zA-Z_ ]/g, \"\")\n    .replace(/ /g, \"-\")\n    .toLowerCase();\n\n  props.headings.forEach((heading) => {\n    let headingLink = getHeadingLink(heading.value);\n    if (headingLinkMap.has(headingLink)) {\n      headingLinkMap.set(headingLink, headingLinkMap.get(headingLink) + 1);\n      headingLink = `${headingLink}-${headingLinkMap.get(headingLink)}`;\n    } else {\n      headingLinkMap.set(headingLink, 0);\n    }\n  });\n\n  return <SideContentsDiv>{headings}</SideContentsDiv>;\n};\n\nSideContents.propTypes = {\n  headings: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      depth: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nclass PostTemplate extends React.Component {\n  componentDidMount() {\n    this.node.style.opacity = 0;\n    window.requestAnimationFrame(() => {\n      this.node.style.transition = \"opacity 1000ms ease-out\";\n      this.node.style.opacity = 1;\n    });\n  }\n\n  render() {\n    const {\n      data: { currPost },\n    } = this.props;\n    const tags = [];\n\n    const dateOptions = {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    };\n    const formattedDate = new Date(currPost.frontmatter.date_created).toLocaleDateString(\n      \"en-US\",\n      dateOptions,\n    );\n\n    return (\n      <PostBody\n        ref={(node) => {\n          this.node = node;\n        }}\n      >\n        <Helmet>\n          <title>{`${currPost.frontmatter.title} | Jeffrey Xiao`}</title>\n        </Helmet>\n        <PostTitle>{currPost.frontmatter.title}</PostTitle>\n        <PostSubtitle>{formattedDate}</PostSubtitle>\n        {tags}\n        <div id=\"post-content\" dangerouslySetInnerHTML={{ __html: currPost.html }} />\n        <SideContents headings={currPost.headings} path={currPost.frontmatter.path} />\n      </PostBody>\n    );\n  }\n}\n\nconst postType = PropTypes.shape({\n  html: PropTypes.string,\n  headings: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      depth: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  frontmatter: PropTypes.shape({\n    date_created: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n});\n\nPostTemplate.propTypes = {\n  pageContext: PropTypes.shape({\n    prevPostPath: PropTypes.string,\n    currPostPath: PropTypes.string.isRequired,\n    nextPostPath: PropTypes.string,\n  }).isRequired,\n  data: PropTypes.shape({\n    prevPost: postType,\n    currPost: postType.isRequired,\n    nextPost: postType,\n  }).isRequired,\n};\n\nexport default PostTemplate;\nexport const pageQuery = graphql`\n  query($prevPostPath: String, $currPostPath: String!, $nextPostPath: String) {\n    prevPost: markdownRemark(frontmatter: { path: { eq: $prevPostPath } }) {\n      ...postFields\n    }\n    currPost: markdownRemark(frontmatter: { path: { eq: $currPostPath } }) {\n      ...postFields\n    }\n    nextPost: markdownRemark(frontmatter: { path: { eq: $nextPostPath } }) {\n      ...postFields\n    }\n  }\n\n  fragment postFields on MarkdownRemark {\n    html\n    headings {\n      value\n      depth\n    }\n    frontmatter {\n      date_created\n      path\n      tags\n      title\n    }\n  }\n`;\n"],"names":["PostBody","styled","colors","PostTitle","PostSubtitle","SideContentsDiv","SideContents","props","headings","headingLinkMap","Map","forEach","heading","headingLink","replace","toLowerCase","getHeadingLink","value","has","set","get","PostTemplate","componentDidMount","this","node","style","opacity","window","requestAnimationFrame","transition","render","data","currPost","tags","formattedDate","Date","frontmatter","date_created","toLocaleDateString","weekday","year","month","day","ref","title","id","dangerouslySetInnerHTML","__html","html","path","React"],"sourceRoot":""}